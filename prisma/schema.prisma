datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  imageSrc    String
  imageAlt    String
  products    Product[]
}

model Product {
  id          Int                @id @default(autoincrement())
  name        String
  nature      String
  images      Images[]
  description String
  features    ProductFeatures[]
  shipping    ProductShipping[]
  details     String
  price       Int
  category    Category?          @relation(fields: [categoryId], onDelete: Cascade, references: [id])
  categoryId  Int?
  cart        Cart?
  @@unique([name, categoryId])
}

model ProductFeatures {
  id        Int      @id @default(autoincrement())
  features  String
  Product   Product? @relation(fields: [productId], onDelete: Cascade, onUpdate:Cascade, references: [id])
  productId Int?
}

model ProductShipping {
  id        Int      @id @default(autoincrement())
  shipping  String
  Product   Product? @relation(fields: [productId], onDelete: Cascade, onUpdate:Cascade, references: [id])
  productId Int?
}

model Images {
  id        Int     @id @default(autoincrement())
  src       String
  alt       String
  product   Product @relation(fields: [productId], onDelete: Cascade, onUpdate:Cascade, references: [id])
  productId Int
}

model Cart {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(0)
  product   Product? @relation(fields: [productId], onDelete: Cascade, onUpdate:Cascade, references: [id])
  productId Int @unique
}
